Nodos destino: [5, 6, 7]
Factor de tolerancia: 0.5
Nodos origen [0, 1, 2, 3, 4, 5, 6, 7]
Las centralidades de evacuación para cada nodo hacia los nodos destino:

(0, [4, 4, 1])
(1, [2, 2, 1])
(2, [0, 2, 3])
(3, [2, 2, 0])
(4, [1, 1, 0])
(5, [0, 2])
(6, [0, 0])
(7, [2, 0])

_____________________________________________________________________________

Nodos destino: [6, 7]
Factor de tolerancia: 0.5
Nodos origen [0, 1, 2, 3, 4, 5, 6, 7]
Las centralidades de evacuación para cada nodo hacia los nodos destino:

(0, [4, 1])
(1, [2, 1])
(2, [2, 3])
(3, [2, 0])
(4, [1, 0])
(5, [0, 2])
(6, [0])
(7, [0])
{0: [4, 1], 1: [2, 1], 2: [2, 3], 3: [2, 0], 4: [1, 0], 5: [0, 2], 6: [0], 7: [0]}

Las centralidades de nodos desde el camino principal
para cada nodo hacia los nodos destino:

############################## Resultados ##############################

[CAMINOS NUEVOS]     [CAMINOS NUEVOS DIFERENTES]

-primera iteracion   -diferentes
(0, [4, 1])          (0, [1, 1])
(1, [2, 1])          (1, [2, 1])
(2, [2, 3])          (2, [1, 1])
(3, [2, 0])          (3, [2, 0])
(4, [1, 0])          (4, [1, 0])
(5, [0, 2])          (5, [0, 1])
(6, [0])             (6, [0])   
(7, [0])             (7, [0])   

-segunda iteracion   -diferentes
(0, [2, 4])          (0, [1, 2]) % aqui falla debe ser 3
(1, [0, 3, 0])       (1, [0, 1, 0])
(2, [1, 0])          (2, [1, 0])
(3, [0, 3])          (3, [0, 1])
(4, [0])             (4, [0])
(5, [1])             (5, [1])
(6, [])              (6, [])
(7, [])              (7, [])

Numero de caminos minimos DIFERENTES por debajo de maximo total:
(0, [8, 4])
(1, [3, 0])
(2, [2, 2])
(3, [3, 0])
(4, [0, 0])
(5, [0, 2])
(6, [0, 0])
(7, [0, 0])

Numero de caminos minimos DIFERENTES por debajo de maximo total ESTRICTAMENTE DIFERENTES:
(0, [3, 2]) % esto es correcto
(1, [1, 0])
(2, [1, 1])
(3, [1, 0])
(4, [0, 0])
(5, [0, 1])
(6, [0, 0])
(7, [0, 0])

############################## Resultados BUENOS POR NODO ##############################

Nodos destino: [6, 7]
Factor de tolerancia: 0.5
Nodos origen: [0, 1, 2, 3, 4, 5, 6, 7]

Numero de caminos minimos por debajo de maximo total:               Numero de caminos minimos por debajo de maximo total ESTRICTAMENTE DIFERENTES:           
(0, [4, 1])                                                         (0, [1, 1])                                   
(1, [2, 1])                                                         (1, [2, 1])                                   
(2, [2, 3])                                                         (2, [1, 1])                                   
(3, [2, 0])                                                         (3, [2, 0])                                   
(4, [1, 0])                                                         (4, [1, 0])                                   
(5, [0, 2])                                                         (5, [0, 1])                                   
(6, [0, 0])                                                         (6, [0, 0])                                   
(7, [0, 0])                                                         (7, [0, 0])                                   
                                                                                       

Numero de caminos minimos DIFERENTES por debajo de maximo total:    Numero de caminos minimos DIFERENTES por debajo de maximo total ESTRICTAMENTE DIFERENTES:                                             
(0, [8, 4])                                                         (0, [3, 2])                            
(1, [3, 0])                                                         (1, [1, 0])                            
(2, [2, 2])                                                         (2, [1, 1])                            
(3, [3, 0])                                                         (3, [1, 0])                            
(4, [0, 0])                                                         (4, [0, 0])                            
(5, [0, 2])                                                         (5, [0, 1])                            
(6, [0, 0])                                                         (6, [0, 0])                            
(7, [0, 0])                                                         (7, [0, 0])                                                            

_____________________________________________________________________________
nuevo
HACIA EL NODO 6:

principal: 90 [0, 1, 3, 4, 6] 
Coste maximo: 135.0
    nuevo camino: 90 [0, 7, 6] quitando la arista ((0, 1),)
        nuevo camino2: 100 [0, 4, 6] quitando la arista2 ((0, 7),)
        nuevo camino2: 100 [0, 4, 6] quitando la arista2 ((7, 6),)
        1 lista_temporal2: {(0, 4, 6)}
 
    nuevo camino: 90 [0, 7, 6] quitando la arista ((1, 3),)
    nuevo camino: 90 [0, 7, 6] quitando la arista ((3, 4),) # esto esta mal, deberia calcularlo
    nuevo camino: 90 [0, 7, 6] quitando la arista ((4, 6),)
1 lista_temporal: {(0, 7, 6)} 

principal: 50 [1, 3, 4, 6]
Coste maximo: 75.0
    nuevo camino: 110 [1, 2, 5, 6] quitando la arista ((1, 3),)
    nuevo camino: 70 [1, 3, 2, 5, 6] quitando la arista ((3, 4),)
        nuevo camino2: 110 [1, 2, 5, 6] quitando la arista2 ((1, 3),)
        nuevo camino2: 130 [1, 0, 7, 6] quitando la arista2 ((2, 5),)
        nuevo camino2: 110 [1, 2, 5, 6] quitando la arista2 ((3, 2),)
        nuevo camino2: 100 [1, 3, 2, 5, 4, 6] quitando la arista2 ((5, 6),)
        0 lista_temporal2: set()

    nuevo camino: 50 [1, 3, 4, 7, 6] quitando la arista ((4, 6),)
        nuevo camino2: 110 [1, 2, 5, 6] quitando la arista2 ((1, 3),)
        nuevo camino2: 70 [1, 3, 2, 5, 6] quitando la arista2 ((3, 4),)
        nuevo camino2: 70 [1, 3, 2, 5, 6] quitando la arista2 ((4, 7),)
        nuevo camino2: 70 [1, 3, 2, 5, 6] quitando la arista2 ((7, 6),)
        1 lista_temporal2: {(1, 3, 2, 5, 6)}

2 lista_temporal: {(1, 3, 4, 7, 6), (1, 3, 2, 5, 6)}

principal: 50 [2, 5, 6]
Coste maximo: 75.0
    nuevo camino: 50 [2, 3, 4, 6] quitando la arista ((2, 5),)
        nuevo camino2: 110 [2, 1, 3, 4, 6] quitando la arista2 ((2, 3),)
        nuevo camino2: 150 [2, 3, 1, 0, 7, 6] quitando la arista2 ((3, 4),)
        nuevo camino2: 50 [2, 3, 4, 7, 6] quitando la arista2 ((4, 6),)
        1 lista_temporal2: {(2, 3, 4, 7, 6)}

    nuevo camino: 50 [2, 3, 4, 6] quitando la arista ((5, 6),)
1 lista_temporal: {(2, 3, 4, 6)}

principal: 40 [3, 4, 6]
Coste maximo: 60.0
    nuevo camino: 60 [3, 2, 5, 6] quitando la arista ((3, 4),)
        nuevo camino2: 140 [3, 1, 0, 7, 6] quitando la arista2 ((2, 5),)
        nuevo camino2: 120 [3, 1, 2, 5, 6] quitando la arista2 ((3, 2),)
        nuevo camino2: 90 [3, 2, 5, 4, 6] quitando la arista2 ((5, 6),)
        0 lista_temporal2: set()

    nuevo camino: 40 [3, 4, 7, 6] quitando la arista ((4, 6),)
        nuevo camino2: 60 [3, 2, 5, 6] quitando la arista2 ((3, 4),)
        nuevo camino2: 60 [3, 2, 5, 6] quitando la arista2 ((4, 7),)
        nuevo camino2: 60 [3, 2, 5, 6] quitando la arista2 ((7, 6),)
        1 lista_temporal2: {(3, 2, 5, 6)}

2 lista_temporal: {(3, 2, 5, 6), (3, 4, 7, 6)}

principal: 30 [4, 6]
Coste maximo: 45.0
    nuevo camino: 30 [4, 7, 6] quitando la arista ((4, 6),)
        nuevo camino2: 60 [4, 5, 6] quitando la arista2 ((4, 7),)
        nuevo camino2: 60 [4, 5, 6] quitando la arista2 ((7, 6),)
        0 lista_temporal2: set()

1 lista_temporal: {(4, 7, 6)}

principal: 30 [5, 6]
Coste maximo: 45.0
    nuevo camino: 60 [5, 4, 6] quitando la arista ((5, 6),)
0 lista_temporal: set()

principal: 10 [7, 6]
Coste maximo: 15.0
    nuevo camino: 50 [7, 4, 6] quitando la arista ((7, 6),)
0 lista_temporal: set()

HACIA EL NODO 7:

principal: 80 [0, 7]
Coste maximo: 120.0
    nuevo camino: 80 [0, 1, 3, 4, 7] quitando la arista ((0, 7),)
        nuevo camino2: 90 [0, 4, 7] quitando la arista2 ((0, 1),)
        nuevo camino2: 90 [0, 4, 7] quitando la arista2 ((1, 3),)
        nuevo camino2: 90 [0, 4, 7] quitando la arista2 ((3, 4),)
        nuevo camino2: 100 [0, 1, 3, 4, 6, 7] quitando la arista2 ((4, 7),)
        2 lista_temporal2: {(0, 4, 7), (0, 1, 3, 4, 6, 7)}

1 lista_temporal: {(0, 1, 3, 4, 7)}

principal: 40 [1, 3, 4, 7]
Coste maximo: 60.0
    nuevo camino: 100 [1, 2, 3, 4, 7] quitando la arista ((1, 3),)
    nuevo camino: 80 [1, 3, 2, 5, 6, 7] quitando la arista ((3, 4),)
    nuevo camino: 60 [1, 3, 4, 6, 7] quitando la arista ((4, 7),)
        nuevo camino2: 120 [1, 0, 7] quitando la arista2 ((1, 3),)
        nuevo camino2: 80 [1, 3, 2, 5, 6, 7] quitando la arista2 ((3, 4),)
        nuevo camino2: 80 [1, 3, 2, 5, 6, 7] quitando la arista2 ((4, 6),)
        nuevo camino2: 120 [1, 0, 7] quitando la arista2 ((6, 7),)
        0 lista_temporal2: set()

1 lista_temporal: {(1, 3, 4, 6, 7)}

principal: 40 [2, 3, 4, 7]
Coste maximo: 60.0
    nuevo camino: 60 [2, 5, 6, 7] quitando la arista ((2, 3),)
        nuevo camino2: 100 [2, 1, 3, 4, 7] quitando la arista2 ((2, 5),)
        nuevo camino2: 70 [2, 5, 4, 7] quitando la arista2 ((5, 6),)
        nuevo camino2: 70 [2, 5, 4, 7] quitando la arista2 ((6, 7),)
        0 lista_temporal2: set()

    nuevo camino: 60 [2, 5, 6, 7] quitando la arista ((3, 4),)
    nuevo camino: 60 [2, 5, 6, 7] quitando la arista ((4, 7),)
1 lista_temporal: {(2, 5, 6, 7)}

principal: 30 [3, 4, 7]
Coste maximo: 45.0
    nuevo camino: 70 [3, 2, 5, 6, 7] quitando la arista ((3, 4),)
    nuevo camino: 50 [3, 4, 6, 7] quitando la arista ((4, 7),)
0 lista_temporal: set()

principal: 20 [4, 7]
Coste maximo: 30.0
    nuevo camino: 40 [4, 6, 7] quitando la arista ((4, 7),)
0 lista_temporal: set()

principal: 40 [5, 6, 7]
Coste maximo: 60.0
    nuevo camino: 50 [5, 4, 7] quitando la arista ((5, 6),)
        nuevo camino2: 70 [5, 4, 6, 7] quitando la arista2 ((4, 7),)
        nuevo camino2: 60 [5, 2, 3, 4, 7] quitando la arista2 ((5, 4),)
        1 lista_temporal2: {(5, 2, 3, 4, 7)}

    nuevo camino: 50 [5, 4, 7] quitando la arista ((6, 7),)
1 lista_temporal: {(5, 4, 7)}

principal: 10 [6, 7]
Coste maximo: 15.0
    nuevo camino: 50 [6, 4, 7] quitando la arista ((6, 7),)
0 lista_temporal: set()

Nodos destino: [6, 7]
Factor de tolerancia: 0.5
Nodos origen [0, 1, 2, 3, 4, 5, 6, 7]


Numero de caminos minimos por debajo de maximo total
 para cada nodo hacia los nodos destino:

(0, [4, 1])
(1, [2, 1])
(2, [2, 3])
(3, [2, 0])
(4, [1, 0])
(5, [0, 2])
(6, [0])
(7, [0])


Numero de caminos minimos por debajo de maximo total ESTRICTAMENTE DIFERENTES
 para cada nodo hacia los nodos destino:

(0, [1, 1])
(1, [2, 1])
(2, [1, 1])
(3, [2, 0])
(4, [1, 0])
(5, [0, 1])
(6, [0])
(7, [0])


Numero de caminos minimos DIFERENTES por debajo de maximo total
para cada nodo hacia los nodos destino:

(0, [2, 4])
(1, [0, 3, 0])
(2, [1, 0])
(3, [0, 3])
(4, [0])
(5, [1])
(6, [])
(7, [])


Numero de caminos minimos DIFERENTES por debajo de maximo total ESTRICTAMENTE DIFERENTES
para cada nodo hacia los nodos destino:

(0, [1, 2])
(1, [0, 1, 0])
(2, [1, 0])
(3, [0, 1])
(4, [0])
(5, [1])
(6, [])
(7, [])

_____________________________________________________________________________
HACIA EL NODO 6:

principal: 90 [0, 1, 3, 4, 6]
Coste maximo: 135.0
    nuevo camino: 90 [0, 7, 6] quitando la arista ((0, 1),)
        nuevo camino2: 100 [0, 4, 6] quitando la arista2 ((0, 7),)
        nuevo camino2: 100 [0, 4, 6] quitando la arista2 ((7, 6),)
    nuevo camino: 90 [0, 7, 6] quitando la arista ((1, 3),)
        nuevo camino2: 100 [0, 4, 6] quitando la arista2 ((0, 7),)
        nuevo camino2: 100 [0, 4, 6] quitando la arista2 ((7, 6),)
    nuevo camino: 90 [0, 7, 6] quitando la arista ((3, 4),)
        nuevo camino2: 100 [0, 4, 6] quitando la arista2 ((0, 7),)
        nuevo camino2: 100 [0, 4, 6] quitando la arista2 ((7, 6),)
    nuevo camino: 90 [0, 7, 6] quitando la arista ((4, 6),)
        nuevo camino2: 90 [0, 1, 3, 4, 7, 6] quitando la arista2 ((0, 7),)
        nuevo camino2: 110 [0, 1, 3, 2, 5, 6] quitando la arista2 ((7, 6),)
1 lista_temporal: {(0, 7, 6)}
3 lista_temporal2: {(0, 1, 3, 2, 5, 6), (0, 1, 3, 4, 7, 6), (0, 4, 6)}

principal: 50 [1, 3, 4, 6]
Coste maximo: 75.0
    nuevo camino: 110 [1, 2, 5, 6] quitando la arista ((1, 3),)
    nuevo camino: 70 [1, 3, 2, 5, 6] quitando la arista ((3, 4),)
        nuevo camino2: 110 [1, 2, 5, 6] quitando la arista2 ((1, 3),)
        nuevo camino2: 130 [1, 0, 7, 6] quitando la arista2 ((2, 5),)
        nuevo camino2: 110 [1, 2, 5, 6] quitando la arista2 ((3, 2),)
        nuevo camino2: 100 [1, 3, 2, 5, 4, 6] quitando la arista2 ((5, 6),)
    nuevo camino: 50 [1, 3, 4, 7, 6] quitando la arista ((4, 6),)
        nuevo camino2: 110 [1, 2, 5, 6] quitando la arista2 ((1, 3),)
        nuevo camino2: 70 [1, 3, 2, 5, 6] quitando la arista2 ((3, 4),) # estos caminos podria volver a calcularlos ya que su coste aun sigue siendo menor
        nuevo camino2: 70 [1, 3, 2, 5, 6] quitando la arista2 ((4, 7),)
        nuevo camino2: 70 [1, 3, 2, 5, 6] quitando la arista2 ((7, 6),)
2 lista_temporal: {(1, 3, 4, 7, 6), (1, 3, 2, 5, 6)}
1 lista_temporal2: {(1, 3, 2, 5, 6)}

principal: 50 [2, 5, 6]
Coste maximo: 75.0
    nuevo camino: 50 [2, 3, 4, 6] quitando la arista ((2, 5),)
        nuevo camino2: 110 [2, 1, 3, 4, 6] quitando la arista2 ((2, 3),)
        nuevo camino2: 150 [2, 3, 1, 0, 7, 6] quitando la arista2 ((3, 4),)
        nuevo camino2: 50 [2, 3, 4, 7, 6] quitando la arista2 ((4, 6),)
    nuevo camino: 50 [2, 3, 4, 6] quitando la arista ((5, 6),)
        nuevo camino2: 80 [2, 5, 4, 6] quitando la arista2 ((2, 3),)
        nuevo camino2: 80 [2, 5, 4, 6] quitando la arista2 ((3, 4),)
        nuevo camino2: 50 [2, 3, 4, 7, 6] quitando la arista2 ((4, 6),)
1 lista_temporal: {(2, 3, 4, 6)}
1 lista_temporal2: {(2, 3, 4, 7, 6)}

principal: 40 [3, 4, 6]
Coste maximo: 60.0
    nuevo camino: 60 [3, 2, 5, 6] quitando la arista ((3, 4),)
        nuevo camino2: 140 [3, 1, 0, 7, 6] quitando la arista2 ((2, 5),)
        nuevo camino2: 120 [3, 1, 2, 5, 6] quitando la arista2 ((3, 2),)
        nuevo camino2: 90 [3, 2, 5, 4, 6] quitando la arista2 ((5, 6),)
    nuevo camino: 40 [3, 4, 7, 6] quitando la arista ((4, 6),)
        nuevo camino2: 60 [3, 2, 5, 6] quitando la arista2 ((3, 4),)
        nuevo camino2: 60 [3, 2, 5, 6] quitando la arista2 ((4, 7),)
        nuevo camino2: 60 [3, 2, 5, 6] quitando la arista2 ((7, 6),)
2 lista_temporal: {(3, 2, 5, 6), (3, 4, 7, 6)}
1 lista_temporal2: {(3, 2, 5, 6)}

principal: 30 [4, 6]
Coste maximo: 45.0
    nuevo camino: 30 [4, 7, 6] quitando la arista ((4, 6),)
        nuevo camino2: 60 [4, 5, 6] quitando la arista2 ((4, 7),)
        nuevo camino2: 60 [4, 5, 6] quitando la arista2 ((7, 6),)
1 lista_temporal: {(4, 7, 6)}
0 lista_temporal2: set()

principal: 30 [5, 6]
Coste maximo: 45.0
    nuevo camino: 60 [5, 4, 6] quitando la arista ((5, 6),)
0 lista_temporal: set()
0 lista_temporal2: set()

principal: 10 [7, 6]
Coste maximo: 15.0
    nuevo camino: 50 [7, 4, 6] quitando la arista ((7, 6),)
0 lista_temporal: set()
0 lista_temporal2: set()

HACIA EL NODO 7:

principal: 80 [0, 7]
Coste maximo: 120.0
    nuevo camino: 80 [0, 1, 3, 4, 7] quitando la arista ((0, 7),)
        nuevo camino2: 90 [0, 4, 7] quitando la arista2 ((0, 1),)
        nuevo camino2: 90 [0, 4, 7] quitando la arista2 ((1, 3),)
        nuevo camino2: 90 [0, 4, 7] quitando la arista2 ((3, 4),)
        nuevo camino2: 100 [0, 1, 3, 4, 6, 7] quitando la arista2 ((4, 7),)
1 lista_temporal: {(0, 1, 3, 4, 7)}
2 lista_temporal2: {(0, 4, 7), (0, 1, 3, 4, 6, 7)}

principal: 40 [1, 3, 4, 7]
Coste maximo: 60.0
    nuevo camino: 100 [1, 2, 3, 4, 7] quitando la arista ((1, 3),)
    nuevo camino: 80 [1, 3, 2, 5, 6, 7] quitando la arista ((3, 4),)
    nuevo camino: 60 [1, 3, 4, 6, 7] quitando la arista ((4, 7),)
        nuevo camino2: 120 [1, 0, 7] quitando la arista2 ((1, 3),)
        nuevo camino2: 80 [1, 3, 2, 5, 6, 7] quitando la arista2 ((3, 4),)
        nuevo camino2: 80 [1, 3, 2, 5, 6, 7] quitando la arista2 ((4, 6),)
        nuevo camino2: 120 [1, 0, 7] quitando la arista2 ((6, 7),)
1 lista_temporal: {(1, 3, 4, 6, 7)}
0 lista_temporal2: set()

principal: 40 [2, 3, 4, 7]
Coste maximo: 60.0
    nuevo camino: 60 [2, 5, 6, 7] quitando la arista ((2, 3),)
        nuevo camino2: 100 [2, 1, 3, 4, 7] quitando la arista2 ((2, 5),)
        nuevo camino2: 70 [2, 5, 4, 7] quitando la arista2 ((5, 6),)
        nuevo camino2: 70 [2, 5, 4, 7] quitando la arista2 ((6, 7),)
    nuevo camino: 60 [2, 5, 6, 7] quitando la arista ((3, 4),)
        nuevo camino2: 140 [2, 3, 1, 0, 7] quitando la arista2 ((2, 5),)
        nuevo camino2: 70 [2, 5, 4, 7] quitando la arista2 ((5, 6),)
        nuevo camino2: 70 [2, 5, 4, 7] quitando la arista2 ((6, 7),)
    nuevo camino: 60 [2, 5, 6, 7] quitando la arista ((4, 7),)
        nuevo camino2: 60 [2, 3, 4, 6, 7] quitando la arista2 ((2, 5),)
        nuevo camino2: 60 [2, 3, 4, 6, 7] quitando la arista2 ((5, 6),)
        nuevo camino2: 140 [2, 3, 1, 0, 7] quitando la arista2 ((6, 7),)
1 lista_temporal: {(2, 5, 6, 7)}
1 lista_temporal2: {(2, 3, 4, 6, 7)}

principal: 30 [3, 4, 7]
Coste maximo: 45.0
    nuevo camino: 70 [3, 2, 5, 6, 7] quitando la arista ((3, 4),)
    nuevo camino: 50 [3, 4, 6, 7] quitando la arista ((4, 7),)
0 lista_temporal: set()
0 lista_temporal2: set()

principal: 20 [4, 7]
Coste maximo: 30.0
    nuevo camino: 40 [4, 6, 7] quitando la arista ((4, 7),)
0 lista_temporal: set()
0 lista_temporal2: set()

principal: 40 [5, 6, 7]
Coste maximo: 60.0
    nuevo camino: 50 [5, 4, 7] quitando la arista ((5, 6),)
        nuevo camino2: 70 [5, 4, 6, 7] quitando la arista2 ((4, 7),)
        nuevo camino2: 60 [5, 2, 3, 4, 7] quitando la arista2 ((5, 4),)
    nuevo camino: 50 [5, 4, 7] quitando la arista ((6, 7),)
        nuevo camino2: 160 [5, 2, 3, 1, 0, 7] quitando la arista2 ((4, 7),)
        nuevo camino2: 60 [5, 2, 3, 4, 7] quitando la arista2 ((5, 4),)
1 lista_temporal: {(5, 4, 7)}
1 lista_temporal2: {(5, 2, 3, 4, 7)}

principal: 10 [6, 7]
Coste maximo: 15.0
    nuevo camino: 50 [6, 4, 7] quitando la arista ((6, 7),)
0 lista_temporal: set()
0 lista_temporal2: set()

Nodos destino: [6, 7]
Factor de tolerancia: 0.5
Nodos origen: [0, 1, 2, 3, 4, 5, 6, 7]

Numero de caminos minimos por debajo de maximo total:
(0, [4, 1])
(1, [2, 1])
(2, [2, 3])
(3, [2, 0])
(4, [1, 0])
(5, [0, 2])
(6, [0, 0])
(7, [0, 0])

Numero de caminos minimos por debajo de maximo total ESTRICTAMENTE DIFERENTES:
(0, [1, 1])
(1, [2, 1])
(2, [1, 1])
(3, [2, 0])
(4, [1, 0])
(5, [0, 1])
(6, [0, 0])
(7, [0, 0])

Numero de caminos minimos DIFERENTES por debajo de maximo total:
(0, [8, 4])
(1, [3, 0])
(2, [2, 2])
(3, [3, 0])
(4, [0, 0])
(5, [0, 2])
(6, [0, 0])
(7, [0, 0])

Numero de caminos minimos DIFERENTES por debajo de maximo total ESTRICTAMENTE DIFERENTES:
(0, [3, 2])
(1, [1, 0])
(2, [1, 1])
(3, [1, 0])
(4, [0, 0])
(5, [0, 1])
(6, [0, 0])
(7, [0, 0])

___ 
del debug
input[6, 4, 3, 1, 0]

{(3, 1), (1, 0), (6, 4), (4, 3)}

sorted
[(1, 0), (3, 1), (4, 3), (6, 4)]