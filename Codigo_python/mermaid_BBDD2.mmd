---
config:
  theme: default
---

erDiagram

    %% --- Bloque 1: Edificio y Espacios ---
    %% Esto modela la estructura del edificio espacialmente, es estático.

    CONEXION              ||--o{ AREA : "tiene origen/destino"
    CONEXION_CONDICIONAL  ||--o{ AREA : "tiene origen/destino"
    
    EDIFICIO  ||--|{ PLANTA : "tiene"
    PLANTA    ||--|{ AREA : "contiene"
    TIPO_AREA ||--o{ AREA : "es de tipo"

    ESTADO_CONEXION ||--|| CONEXION  : "tiene estado"
    
    TIPO_CONEXION ||--|| CONEXION             : "es de tipo"
    TIPO_CONEXION ||--|| CONEXION_CONDICIONAL : "es de tipo"
    
    ESTADO_CONEXION_CONDICIONAL ||--|| CONEXION_CONDICIONAL  : "tiene estado"

    EDIFICIO {
      int id_edificio PK
      varchar nombre
      text descripcion
      float latitud
      float longitud
      int capacidad_personas
      float superficie_m2
    }
    PLANTA {
      int id_planta PK
      int id_edificio FK
      varchar nombre
      int nivel
      float superficie_m2
    }
    AREA {
      int id_area PK
      int id_planta FK
      varchar nombre
      text descripcion
      float superficie_m2
      int capacidad_personas
      boolean salida_segura
      int id_tipo_area FK
    }
    TIPO_AREA {
      int id_tipo_area PK
      varchar nombre                    
      text descripcion                  
    }
    %% CONEXION son las puertas (o alternativamente ventanas) o todo aquello que esta entre una AREA y otra AREA (normalmente puertas)
    CONEXION {
      int id_conexion PK
      int id_area_origen FK
      int id_area_destino FK
      varchar nombre
      text descripcion
      float ancho
      float alto
      int flujo_personas_min
      boolean bidireccional
      int id_tipo_conexion FK
    }
    %% Esto modela la existencia de ventanas/hueco/ventilación/rupturas_estructurales como conexiones que no son puertas 
    %% Algunas de estas conexiones son solo transitables en situaciones extremas y la mayoria solo para perfiles de movilidad concretos
    CONEXION_CONDICIONAL {
      int id_conexion_condicional PK
      int id_area_origen FK
      int id_area_destino FK
      int tipo_conexion FK
      float alto 
      float ancho 
      boolean requiere_rescate
      boolean uso_extremo
      boolean restriccion_movilidad 
      boolean accesible_bomberos
      text descripcion 
    }
    TIPO_CONEXION {
      int id_tipo_conexion 
      varchar nombre 
      text descripcion 
      enum clase_acceso
      boolean requiere_rescate
      boolean uso_extremo
      boolean restriccion_movilidad 
      boolean accesible_bomberos
      boolean bidireccional 
      boolean requiere_apertura 
      TEXT observaciones 
    }
    %% Las puertas pueden estar abiertas/cerradas/bloqueadas/intransitables el grafo navegable dependerá de esto
    %% Se tiene que tener en cuenta y modificar dinámicamente el grafo y su transitabilidad
    ESTADO_CONEXION {
      int id_estado_conexion PK
      int id_conexion FK
      enum estado 
      int severidad
      text descripcion
      text origen_evento
      datetime timestamp
    }
    ESTADO_CONEXION_CONDICIONAL {
      int id_estado_condicional PK
      int id_conexion_condicional FK
      enum estado 
      int severidad
      text descripcion
      text origen_evento
      datetime timestamp
    }

    
    
    %% --- Bloque 3: Sensores y Lecturas ---
    %% Esto modela los sensores y el estado en tiempo real de las mediciones, es dinámica.
    AREA ||--o{ LECTURA : "ocurre en"
    AREA ||--o{ HISTORICO_LECTURAS : "ocurre en"
    AREA ||--o{ BALIZA : "tiene"

    BALIZA   ||--o{ BALIZA_SENSOR    : "tiene sensores"
    SENSOR   ||--|| SENSOR_VARIABLE  : "mide variables"
    SENSOR   ||--o{ BALIZA_SENSOR    : "conectado a"
    VARIABLE ||--|| SENSOR_VARIABLE  : "definida en"

    HISTORICO_LECTURAS||--o{ VARIABLE : "mide"
    HISTORICO_LECTURAS||--o{ SENSOR   : "usa"
    HISTORICO_LECTURAS||--o{ BALIZA   : "genera"

    LECTURA ||--o{ VARIABLE  : "mide"
    LECTURA ||--o{ SENSOR    : "usa"
    LECTURA ||--o{ BALIZA    : "genera"
    
    BALIZA {
      int id_baliza PK
      varchar nombre
      text descripcion
      boolean activa
      int id_area FK
    }
    SENSOR {
      int id_sensor PK
      varchar nombre
      text descripcion
      boolean activa
    }
    VARIABLE {
      int id_variable PK
      varchar nombre
      text descripcion
      varchar unidad
    }
    BALIZA_SENSOR {
      int id PK
      int id_baliza FK
      int id_sensor FK
      text descripcion
    }
    SENSOR_VARIABLE {
      int id PK
      int id_sensor FK
      int id_variable FK
      text descripcion
    }
    %% En LECTURA se almacena los ultimos valores medidos por los sensores de las balizas en cada una de las AREAS, su tamaño es fijo, y unicamente se actualiza el valor de la variable, se podría decir que es una especie de Snapshot del estado del sistema en términos de las variables.
    %% Mi idea con esta entidad es tener las ultimas lecturas como si fuera un Live.
    LECTURA {
      int id_lectura PK
      int id_area FK
      int id_baliza FK
      int id_sensor FK
      int id_variable FK
      float valor
      datetime timestamp
    }
    %% Como LECTURA es una tabla estática, para no perdér los datos con cada nueva lectura, se deben ir volcando con cada nueva LECTURA en su HISTORICO, se vuelca al mismo tiempo que se obtiene la lectura de tal modo que los ultimos registros de LECTURA y su HISTORICO son los mismos
    %% Mi idea con esta entidad es poder tener un registro en el tiempo de como han evolucionado las variabes (Tº, CO2, Humo) y poder auditar lo que ha ocurrido, tambien de obtener una media de las ultimas lecturas, como una media de temperatura, el incremento, etc, para poder tener control sobre como evolucionan y detectar patrones.
    HISTORICO_LECTURAS {
      int id_historico_lectura PK
      int id_area FK
      int id_baliza FK
      int id_sensor FK
      int id_variable FK
      float valor
      datetime timestamp
    }

    %% --- Bloque 4: Seguridad ---
    %% Esto modela los eventos generados por el analisis de multiples flujos de datos, este analisis se hace fuera de la base de datos mediante un motor de CEP.
    AREA                 ||--|| EVENTO : "tiene"
    
    AREA                 ||--|| HISTORICO_EVALUACION_SEGURIDAD : "historico en"
    EVENTO               ||--|| HISTORICO_EVALUACION_SEGURIDAD  : "origina"
    EVENTO               ||--|| EVALUACION_SEGURIDAD  : "origina"
    AREA                 ||--|| EVALUACION_SEGURIDAD : "tiene"
   
    

    %% EVENTO es un registro de hechos
    %% La lógica de cómo cambian los estados en base a los eventos se hara de forma externa a la base de datos (motor CEP)
    EVENTO {
      int id_evento PK
      varchar tipo_evento
      text descripcion
      enum severidad
      datatime timestamp
      int id_area FK
      varchar origen
      boolean requiere_evacuar
    }
    %% EVALUACION_SEGURIDAD Esto es el estado actual en base a los eventos
    EVALUACION_SEGURIDAD {
      int id_seguridad PK
      int id_area FK
      float valor
      datetime timestamp
      int id_evento FK
      text accion_recomendada
    }
    HISTORICO_EVALUACION_SEGURIDAD {
      int id_historico_seguridad PK
      int id_area FK
      float valor
      datetime timestamp
      int id_evento FK
      text accion_recomendada

    }


    %% --- Bloque 5: Usuarios y Rutas ---
    %% Esto modela que rutas se recomiendan a que usuarios, tambie modela la posición del usuario relativa a las balizas.
    USUARIO ||--|| USUARIO_UBICACION_ACTUAL : "tiene"
    USUARIO ||--|| HISTORICO_USUARIO_UBICACION : "tiene"
    USUARIO ||--o{ RUTA : "recibe"
    USUARIO ||--o{ HISTORICO_RUTA : "recibe"
    USUARIO }o--|| PERFIL_MOVILIDAD : "tiene perfil"

    USUARIO_UBICACION_ACTUAL     ||--|| AREA : "en"
    HISTORICO_USUARIO_UBICACION  ||--o{ AREA : "historico"
    RUTA                         ||--|| AREA : "tiene origen/destino"
    HISTORICO_RUTA               ||--o{ AREA : "historico"


    USUARIO {
      int id_usuario PK
      varchar nombre
      varchar correo
      varchar tipo_usuario
      datetime creado_en
    }
    
    PERFIL_MOVILIDAD {
      int id_perfil PK
      int id_usuario FK
      boolean usa_escaleras
      boolean usa_ventanas
      float velocidad_m_s
      enum movilidad 
    }
    %% USUARIO_UBICACIÓN_ACTUAL contiene la ubicación actual de usuario o la ultima conocida (esto nose si da problemas), Deberia tener le tamaño igual al numero de usuarios del edificio o planta (segun lo que se estudie) y solo variar la posición/ubicación (Muy parecido por no decir igual al la entidad LECTURA)
    %% La obtención de esta ubicación se hace mediante un algoritmo de triangulación utilzando las balizas y un dispositivo del usuario, externo a la base de datos (Motor de triangulación)
    USUARIO_UBICACION_ACTUAL {
      int id_usuario FK
      int id_area PK
      datetime timestamp
    }
    %% Como USUARIO_UBICACION_ACTUAL no crece con las nuevas ubicaciones, las nuevas ubicaciones se deben ir volcando en su HISTORICO (muy parecido por no decir igual a lo que ocurre con LECTURA y su HISTORICO)
    HISTORICO_USUARIO_UBICACION {
      int id PK
      int id_usuario FK
      int id_area FK
      datetime deteccion
    }
  %% El algoritmo de recomendación de rutas es externo a la Base de datos (Motor de recomendación de rutas de evacuación)
    RUTA {
      int id_ruta PK
      int id_area_origen FK
      int id_area_destino FK
      datetime timestamp
      int tiempo_estimado
      jsonb ruta
      int id_seguridad FK
      int id_usuario FK
    }
    HISTORICO_RUTA {
      int id_historico_ruta PK
      int id_usuario FK
      int id_area_origen FK
      int id_area_destino FK
      datetime timestamp
      int tiempo_estimado
      jsonb ruta
      boolean efectiva
      int id_seguridad FK
      text motivo_generacion
    }


    %% --- ESTILOS DE LAS TABLAS ---

    %% --- Edificios y espacios ---
    style EDIFICIO fill:#E3F2FD,stroke:#64B5F6,stroke-width:2px
    style PLANTA fill:#E3F2FD,stroke:#64B5F6,stroke-width:2px
    style AREA fill:#E3F2FD,stroke:#64B5F6,stroke-width:2px
    style TIPO_AREA fill:#E3F2FD,stroke:#64B5F6,stroke-width:2px
    style CONEXION fill:#E3F2FD,stroke:#64B5F6,stroke-width:2px
    style TIPO_CONEXION fill:#E3F2FD,stroke:#64B5F6,stroke-width:2px


    %% --- Sensores y lecturas ---
    style BALIZA fill:#E8F5E9,stroke:#66BB6A,stroke-width:2px
    style SENSOR fill:#E8F5E9,stroke:#66BB6A,stroke-width:2px
    style VARIABLE fill:#E8F5E9,stroke:#66BB6A,stroke-width:2px
    style BALIZA_SENSOR fill:#E8F5E9,stroke:#66BB6A,stroke-width:2px
    style SENSOR_VARIABLE fill:#E8F5E9,stroke:#66BB6A,stroke-width:2px
    style LECTURA fill:#E8F5E9,stroke:#66BB6A,stroke-width:2px
    style HISTORICO_LECTURAS fill:#E8F5E9,stroke:#66BB6A,stroke-width:2px

    %% --- Seguridad ---
    style EVALUACION_SEGURIDAD fill:#F5F5DC,stroke:#A1887F,stroke-width:2px
    style HISTORICO_EVALUACION_SEGURIDAD fill:#F5F5DC,stroke:#A1887F,stroke-width:2px
    style EVENTO fill:#F5F5DC,stroke:#A1887F,stroke-width:2px

    %% --- Usuarios y Rutas ---
    style USUARIO fill:#EDE7F6,stroke:#5E35B1,stroke-width:2px
    style USUARIO_UBICACION_ACTUAL fill:#EDE7F6,stroke:#5E35B1,stroke-width:2px
    style HISTORICO_USUARIO_UBICACION fill:#EDE7F6,stroke:#5E35B1,stroke-width:2px
    style RUTA fill:#EDE7F6,stroke:#5E35B1,stroke-width:2px
